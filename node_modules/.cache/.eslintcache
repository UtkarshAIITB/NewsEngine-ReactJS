[{"/Users/utkarshagiwal/Documents/Coding/React/covid/src/index.js":"1","/Users/utkarshagiwal/Documents/Coding/React/covid/src/reportWebVitals.js":"2","/Users/utkarshagiwal/Documents/Coding/React/covid/src/App.js":"3","/Users/utkarshagiwal/Documents/Coding/React/covid/src/components/Navbar.js":"4","/Users/utkarshagiwal/Documents/Coding/React/covid/src/components/Cards.js":"5","/Users/utkarshagiwal/Documents/Coding/React/covid/src/components/Data.js":"6","/Users/utkarshagiwal/Documents/Coding/React/covid/src/components/Dropdown.js":"7","/Users/utkarshagiwal/Documents/Coding/React/covid/src/components/News.js":"8","/Users/utkarshagiwal/Documents/Coding/React/covid/src/components/Spinner.js":"9","/Users/utkarshagiwal/Documents/Coding/React/covid/src/components/NewsItem.js":"10","/Users/utkarshagiwal/Documents/GitHub/NewsEngine-ReactJS/src/index.js":"11","/Users/utkarshagiwal/Documents/GitHub/NewsEngine-ReactJS/src/App.js":"12","/Users/utkarshagiwal/Documents/GitHub/NewsEngine-ReactJS/src/reportWebVitals.js":"13","/Users/utkarshagiwal/Documents/GitHub/NewsEngine-ReactJS/src/components/News.js":"14","/Users/utkarshagiwal/Documents/GitHub/NewsEngine-ReactJS/src/components/Navbar.js":"15","/Users/utkarshagiwal/Documents/GitHub/NewsEngine-ReactJS/src/components/Data.js":"16","/Users/utkarshagiwal/Documents/GitHub/NewsEngine-ReactJS/src/components/NewsItem.js":"17","/Users/utkarshagiwal/Documents/GitHub/NewsEngine-ReactJS/src/components/Cards.js":"18","/Users/utkarshagiwal/Documents/GitHub/NewsEngine-ReactJS/src/components/Dropdown.js":"19","/Users/utkarshagiwal/Documents/GitHub/NewsEngine-ReactJS/src/components/Spinner.js":"20"},{"size":500,"mtime":1632411073806,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1632411073807,"results":"23","hashOfConfig":"22"},{"size":1891,"mtime":1632822398147,"results":"24","hashOfConfig":"22"},{"size":1848,"mtime":1632822396085,"results":"25","hashOfConfig":"22"},{"size":2435,"mtime":1632489538511,"results":"26","hashOfConfig":"22"},{"size":9868,"mtime":1632822235871,"results":"27","hashOfConfig":"22"},{"size":8130,"mtime":1632823996567,"results":"28","hashOfConfig":"22"},{"size":3067,"mtime":1632510729623,"results":"29","hashOfConfig":"22"},{"size":270,"mtime":1632510235937,"results":"30","hashOfConfig":"22"},{"size":1378,"mtime":1632510239200,"results":"31","hashOfConfig":"22"},{"size":500,"mtime":1632411073806,"results":"32","hashOfConfig":"33"},{"size":1891,"mtime":1632822398147,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1632411073807,"results":"35","hashOfConfig":"33"},{"size":3067,"mtime":1632843728617,"results":"36","hashOfConfig":"33"},{"size":1848,"mtime":1632822396085,"results":"37","hashOfConfig":"33"},{"size":10897,"mtime":1632845772247,"results":"38","hashOfConfig":"33"},{"size":1378,"mtime":1632510239200,"results":"39","hashOfConfig":"33"},{"size":2435,"mtime":1632489538511,"results":"40","hashOfConfig":"33"},{"size":10575,"mtime":1632846638445,"results":"41","hashOfConfig":"33"},{"size":270,"mtime":1632510235937,"results":"42","hashOfConfig":"33"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"n7lnuj",{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"45"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1df8dch",{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/Users/utkarshagiwal/Documents/Coding/React/covid/src/index.js",[],["87","88"],"/Users/utkarshagiwal/Documents/Coding/React/covid/src/reportWebVitals.js",[],"/Users/utkarshagiwal/Documents/Coding/React/covid/src/App.js",[],"/Users/utkarshagiwal/Documents/Coding/React/covid/src/components/Navbar.js",[],"/Users/utkarshagiwal/Documents/Coding/React/covid/src/components/Cards.js",[],"/Users/utkarshagiwal/Documents/Coding/React/covid/src/components/Data.js",["89"],"import React, {useEffect,useState} from 'react'\nimport Cards from './Cards';\nimport Dropdown from './Dropdown';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n  } from \"react-router-dom\";\n\nconst Data = () =>{\n\n    const [regional, setRegional] = useState([])\n    const [summary, setSummary] = useState([])\n    // const [tdeaths, setTdeaths] = useState('0')\n    const [regional2, setRegional2] = useState([])\n    const [summary2, setSummary2] = useState([])\n    const [dated, setDated] = useState(\"2021-09-19\")\n\n\n    const updateData = async()=>{\n        const url = 'https://api.rootnet.in/covid19-in/stats/latest';\n        let cdata = await fetch(url);\n        let parsedData = await cdata.json();\n        setRegional(parsedData.data.regional);\n        setSummary(parsedData.data.summary);\n        // console.log(regional[1]['deaths']);\n        // console.log(JSON.stringify(regional[1],null,2))\n        \n        // delete (regional[1].confirmedCasesForeign)\n        // const propertyValues = Object.keys(regional[1]);\n        // console.log(propertyValues);\n        // setDated(parsedData.)\n        // const car = regional[1];\n        // delete car.confirmedCasesForeign;\n        // console.log(car)\n    }\n\n    const updateData2 = async()=>{\n        const url2 = 'https://api.rootnet.in/covid19-in/stats/history';\n        let cdata2 = await fetch(url2);\n        let parsedData = await cdata2.json();\n        setRegional2(parsedData.data[parseInt(parsedData.data.length)-2].regional);  //-3 returned date of 15.09 , latest being 19.09\n        setSummary2(parsedData.data[parseInt(parsedData.data.length)-2].summary);\n        setDated(parsedData.data[parseInt(parsedData.data.length)-1].day);\n    }\n\n    const stateData = async()=>{\n        Array.isArray(regional) && (console.log(regional[1]?.deaths))\n    }\n\n    useEffect(() => {\n        updateData();\n        updateData2();\n        stateData();\n        // eslint-disable-next-line\n    }, [])\n\n\n\n    return (\n        <>\n        <div className=\"container my-3\" style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'center',\n            alignItems: 'center',\n            flexDirection: 'row'\n        }}> \n            \n                \n                    {/* {regional.map((element) =>{\n                        return <div className=\"container\" key={element.loc}>\n                            <Cards deaths ={element.deaths} loc={element.loc} />\n                        </div>\n                    } )}    */}\n                    {/* { regional2.map((element) =>{\n                           return <Cards deaths ={summary.deaths} cases={summary.total} discharged={summary.discharged} check={element.deaths}/>\n                    })} */}\n            <Cards deaths ={summary.deaths} cases={summary.total} discharged={summary.discharged} deaths_prev={summary2.deaths} \n            cases_prev={summary2.total} discharged_prev={summary2.discharged} />\n\n            <div className=\"container my-2 text-center\">\n                <button type=\"button\" className=\"btn btn-outline-info\">Last Updated on {dated} </button>\n            </div>\n\n                {/* { regional.map((element)=>{\n                    return  console.log(element.loc)\n                })} */}\n        <Router>\n          <Switch>\n                          <Route exact path=\"/coviddashboard\"><Dropdown key=\"general\" category=\"general\" name=\"Choose State\" data={\"\"} deaths ={summary.deaths} cases={summary.total} discharged={summary.discharged} ></Dropdown> </Route>\n                            <Route exact path=\"/andamanandnicobarislands\"> <Dropdown key=\"andamanandnicobarislands\" category=\"andamanandnicobarislands\" name=\"Andaman and Nicobar Islands\" \n                             data = {regional[0]}/> </Route>\n                            <Route exact path=\"/andhrapradesh\"><Dropdown key=\"andhrapradesh\" category=\"andhrapradesh\" name=\"Andhra Pradesh\" data = {regional[1]} >\n                                </Dropdown> </Route>\n                            <Route exact path=\"/arunachalpradesh\"><Dropdown key=\"arunachalpradesh\" category=\"arunachalpradesh\" name=\"Arunachal Pradesh\" data = {regional[2]} ></Dropdown> </Route>\n                            <Route exact path=\"/assam\"><Dropdown key=\"assam\" category=\"assam\" name=\"Assam\" data = {regional[3]}></Dropdown> </Route>\n                            <Route exact path=\"/bihar\"><Dropdown key=\"bihar\" category=\"bihar\" name=\"Bihar\" data = {regional[4]}></Dropdown> </Route>\n                            <Route exact path=\"/chandigarh\"><Dropdown key=\"chandigarh\" category=\"chandigarh\" name=\"Chandigarh\" data = {regional[5]} ></Dropdown> </Route>\n                            <Route exact path=\"/chhattisgarh\"><Dropdown key=\"chhattisgarh\" category=\"chhattisgarh\" name=\"Chhattisgarh\" data = {regional[6]}></Dropdown> </Route>\n                            <Route exact path=\"/dadraandnagarhavelianddamananddiu\"><Dropdown key=\"dadraandnagarhavelianddamananddiu\" category=\"dadraandnagarhavelianddamananddiu\" name=\"Dadra and Nagar Haveli and Daman and Diu\" data = {regional[7]} ></Dropdown> </Route>\n                            <Route exact path=\"/delhi\"><Dropdown key=\"delhi\" category=\"delhi\" name=\"Delhi\" data = {regional[8]}></Dropdown> </Route>\n                            <Route exact path=\"/goa\"><Dropdown key=\"goa\" category=\"goa\" name=\"Goa\" data = {regional[9]}></Dropdown> </Route>\n                            <Route exact path=\"/gujarat\"><Dropdown key=\"gujarat\" category=\"gujarat\" name=\"Gujarat\" data = {regional[10]}></Dropdown> </Route>\n                            <Route exact path=\"/haryana\"><Dropdown key=\"haryana\" category=\"haryana\" name=\"Haryana\" data = {regional[11]}></Dropdown> </Route>\n                            <Route exact path=\"/himachalpradesh\"><Dropdown key=\"himachalpradesh\" category=\"himachalpradesh\" name=\"Himachal Pradesh\" data = {regional[12]}></Dropdown> </Route>\n                            <Route exact path=\"/jammuandkashmir\"><Dropdown key=\"jammuandkashmir\" category=\"jammuandkashmir\" name=\"Jammu and Kashmir\" data = {regional[13]}></Dropdown> </Route>\n                            <Route exact path=\"/jharkhand\"><Dropdown key=\"jharkhand\" category=\"jharkhand\" name=\"Jharkhand\" data = {regional[14]}></Dropdown> </Route>\n                            <Route exact path=\"/karnataka\"><Dropdown key=\"karnataka\" category=\"karnataka\" name=\"Karnataka\" data = {regional[15]}></Dropdown> </Route>\n                            <Route exact path=\"/kerala\"><Dropdown key=\"kerala\" category=\"kerala\" name=\"Kerala\" data = {regional[16]}></Dropdown> </Route>\n                            <Route exact path=\"/ladakh\"><Dropdown key=\"ladakh\" category=\"ladakh\" name=\"Ladakh\" data = {regional[17]}></Dropdown> </Route>\n                            <Route exact path=\"/lakshadweep\"><Dropdown key=\"lakshadweep\" category=\"lakshadweep\" name=\"Lakshadweep\" data = {regional[18]} ></Dropdown> </Route>\n                            <Route exact path=\"/madhyapradesh\"><Dropdown key=\"madhyapradesh\" category=\"madhyapradesh\" name=\"Madhya Pradesh\" data = {regional[19]}></Dropdown> </Route>\n                            <Route exact path=\"/maharashtra\"><Dropdown key=\"maharashtra\" category=\"maharashtra\" name=\"Maharashtra\" data = {regional[20]}></Dropdown> </Route>\n                            <Route exact path=\"/manipur\"><Dropdown key=\"manipur\" category=\"manipur\" name=\"Manipur\" data = {regional[21]}></Dropdown> </Route>\n                            <Route exact path=\"/meghalaya\"><Dropdown key=\"meghalaya\" category=\"meghalaya\" name=\"Meghalaya\" data = {regional[22]}></Dropdown> </Route>\n                            <Route exact path=\"/mizoram\"><Dropdown key=\"mizoram\" category=\"mizoram\" name=\"Mizoram\" data = {regional[23]}></Dropdown> </Route>\n                            <Route exact path=\"/nagaland\"><Dropdown key=\"nagaland\" category=\"nagaland\" name=\"Nagaland\"  data = {regional[24]}></Dropdown> </Route>\n                            <Route exact path=\"/odisha\"><Dropdown key=\"odisha\" category=\"odisha\" name=\"Odisha\"  data = {regional[25]}></Dropdown> </Route>\n                            <Route exact path=\"/puducherry\"><Dropdown key=\"puducherry\" category=\"puducherry\" name=\"Puducherry\"  data = {regional[26]}></Dropdown> </Route>\n                            <Route exact path=\"/punjab\"><Dropdown key=\"punjab\" category=\"punjab\" name=\"Punjab\"  data = {regional[27]}></Dropdown> </Route>\n                            <Route exact path=\"/rajasthan\"><Dropdown key=\"rajasthan\" category=\"rajasthan\" name=\"Rajasthan\"  data = {regional[28]}></Dropdown> </Route>\n                            <Route exact path=\"/sikkim\"><Dropdown key=\"sikkim\" category=\"sikkim\" name=\"Sikkim\"  data = {regional[29]}></Dropdown> </Route>\n                            <Route exact path=\"/tamilnadu\"><Dropdown key=\"tamilnadu\" category=\"tamilnadu\" name=\"Tamil Nadu\"  data = {regional[30]}></Dropdown> </Route>\n                            <Route exact path=\"/telangana\"><Dropdown key=\"telangana\" category=\"telangana\" name=\"Telangana\"  data = {regional[31]}></Dropdown> </Route>\n                            <Route exact path=\"/tripura\"><Dropdown key=\"tripura\" category=\"tripura\" name=\"Tripura\"  data = {regional[32]}></Dropdown> </Route>\n                            <Route exact path=\"/uttarakhand\"><Dropdown key=\"uttarakhand\" category=\"uttarakhand\" name=\"Uttarakhand\"  data = {regional[33]}></Dropdown> </Route>\n                            <Route exact path=\"/uttarpradesh\"><Dropdown key=\"uttarpradesh\" category=\"uttarpradesh\" name=\"Uttar Pradesh\"  data = {regional[34]}></Dropdown> </Route>\n                            <Route exact path=\"/westbengal\"><Dropdown key=\"westbengal\" category=\"westbengal\" name=\"West Bengal\"  data = {regional[35]}></Dropdown> </Route>\n          </Switch>\n        </Router>\n           \n            \n\n            \n        </div>\n        </>\n    )\n}\n\nexport default Data\n","/Users/utkarshagiwal/Documents/Coding/React/covid/src/components/Dropdown.js",[],"/Users/utkarshagiwal/Documents/Coding/React/covid/src/components/News.js",["90","91"],"import React, {useEffect, useState} from 'react'\n\nimport NewsItem from './NewsItem'\nimport Spinner from './Spinner';\nimport PropTypes from 'prop-types'\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst News = (props)=>{\n    const [articles, setArticles] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [page, setPage] = useState(1)\n    const [totalResults, setTotalResults] = useState(0)\n    \n    const capitalizeFirstLetter = (string) => {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    } \n\n    const updateNews = async ()=> {\n        const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=${props.pageSize}`; \n        setLoading(true)\n        let data = await fetch(url);\n        let parsedData = await data.json()\n        setArticles(parsedData.articles)\n        setTotalResults(parsedData.totalResults)\n        setLoading(false)\n    }\n\n    useEffect(() => {\n        document.title = `${capitalizeFirstLetter(props.category)} - NewsMonkey`;\n        updateNews(); \n        // eslint-disable-next-line\n    }, [])\n\n\n    const fetchMoreData = async () => {   \n        const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page+1}&pageSize=${props.pageSize}`;\n        setPage(page+1) \n        let data = await fetch(url);\n        let parsedData = await data.json()\n        setArticles(articles.concat(parsedData.articles))\n        setTotalResults(parsedData.totalResults)\n      };\n \n        return (\n            <>\n                <h1 className=\"text-center\" style={{ margin: '35px 0px', marginTop: '90px' }}>NewsEngine - Top {capitalizeFirstLetter(props.category)} Headlines</h1>\n                {loading && <Spinner />}\n                {/* <InfiniteScroll\n                    dataLength={articles.length}\n                    next={fetchMoreData}\n                    hasMore={articles.length !== totalResults}\n                    loader={<Spinner/>} */}\n                {/* >  */}\n                    <div className=\"container\">\n                         \n                    <div className=\"row\">\n                        {articles.map((element) => {\n                            return <div className=\"col-md-4\" key={element.url}>\n                                <NewsItem title={element.title ? element.title : \"\"} description={element.description ? element.description : \"\"} imageUrl={element.urlToImage} newsUrl={element.url} author={element.author} date={element.publishedAt} source={element.source.name} />\n                            </div>\n                        })}\n                    </div>\n                    </div> \n                {/* </InfiniteScroll> */}\n            </>\n        )\n    \n}\n\n\nNews.defaultProps = {\n    country: 'in',\n    pageSize: 8,\n    category: 'general',\n}\n\nNews.propTypes = {\n    country: PropTypes.string,\n    pageSize: PropTypes.number,\n    category: PropTypes.string,\n}\n\nexport default News","/Users/utkarshagiwal/Documents/Coding/React/covid/src/components/Spinner.js",[],"/Users/utkarshagiwal/Documents/Coding/React/covid/src/components/NewsItem.js",[],"/Users/utkarshagiwal/Documents/GitHub/NewsEngine-ReactJS/src/index.js",[],["92","93"],"/Users/utkarshagiwal/Documents/GitHub/NewsEngine-ReactJS/src/App.js",[],"/Users/utkarshagiwal/Documents/GitHub/NewsEngine-ReactJS/src/reportWebVitals.js",[],"/Users/utkarshagiwal/Documents/GitHub/NewsEngine-ReactJS/src/components/News.js",["94","95"],"/Users/utkarshagiwal/Documents/GitHub/NewsEngine-ReactJS/src/components/Navbar.js",[],"/Users/utkarshagiwal/Documents/GitHub/NewsEngine-ReactJS/src/components/Data.js",[],"/Users/utkarshagiwal/Documents/GitHub/NewsEngine-ReactJS/src/components/NewsItem.js",[],"/Users/utkarshagiwal/Documents/GitHub/NewsEngine-ReactJS/src/components/Cards.js",[],"/Users/utkarshagiwal/Documents/GitHub/NewsEngine-ReactJS/src/components/Dropdown.js",[],"/Users/utkarshagiwal/Documents/GitHub/NewsEngine-ReactJS/src/components/Spinner.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":15,"column":12,"nodeType":"102","messageId":"103","endLine":15,"endColumn":21},{"ruleId":"100","severity":1,"message":"104","line":12,"column":12,"nodeType":"102","messageId":"103","endLine":12,"endColumn":24},{"ruleId":"100","severity":1,"message":"105","line":35,"column":11,"nodeType":"102","messageId":"103","endLine":35,"endColumn":24},{"ruleId":"96","replacedBy":"106"},{"ruleId":"98","replacedBy":"107"},{"ruleId":"100","severity":1,"message":"104","line":12,"column":12,"nodeType":"102","messageId":"103","endLine":12,"endColumn":24},{"ruleId":"100","severity":1,"message":"105","line":35,"column":11,"nodeType":"102","messageId":"103","endLine":35,"endColumn":24},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'regional2' is assigned a value but never used.","Identifier","unusedVar","'totalResults' is assigned a value but never used.","'fetchMoreData' is assigned a value but never used.",["108"],["109"],"no-global-assign","no-unsafe-negation"]