{"ast":null,"code":"var _jsxFileName = \"/Users/utkarshagiwal/Documents/GitHub/NewsEngine-ReactJS/src/components/News.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport NewsItem from './NewsItem';\nimport Spinner from './Spinner';\nimport PropTypes from 'prop-types'; // import InfiniteScroll from \"react-infinite-scroll-component\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst News = props => {\n  _s();\n\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [totalResults, setTotalResults] = useState(0);\n\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  const updateNews = async () => {\n    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=${props.pageSize}`;\n    setLoading(true);\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    setArticles(parsedData.articles);\n    setTotalResults(parsedData.totalResults);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    document.title = `${capitalizeFirstLetter(props.category)} - NewsMonkey`;\n    updateNews(); // eslint-disable-next-line\n  }, []);\n\n  const fetchMoreData = async () => {\n    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page + 1}&pageSize=${props.pageSize}`;\n    setPage(page + 1);\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    setArticles(articles.concat(parsedData.articles));\n    setTotalResults(parsedData.totalResults);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      style: {\n        margin: '35px 0px',\n        marginTop: '90px'\n      },\n      children: [\"NewsEngine - Top \", capitalizeFirstLetter(props.category), \" Headlines\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: articles.map(element => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(NewsItem, {\n              title: element.title ? element.title : \"\",\n              description: element.description ? element.description : \"\",\n              imageUrl: element.urlToImage,\n              newsUrl: element.url,\n              author: element.author,\n              date: element.publishedAt,\n              source: element.source.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this)\n          }, element.url, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n};\n\n_s(News, \"DJGT5z9fcO00SGn/4yt1PHL84Ps=\");\n\n_c = News;\nNews.defaultProps = {\n  country: 'in',\n  pageSize: 8,\n  category: 'general'\n};\nNews.propTypes = {\n  country: PropTypes.string,\n  pageSize: PropTypes.number,\n  category: PropTypes.string\n};\nexport default News;\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"sources":["/Users/utkarshagiwal/Documents/GitHub/NewsEngine-ReactJS/src/components/News.js"],"names":["React","useEffect","useState","NewsItem","Spinner","PropTypes","News","props","articles","setArticles","loading","setLoading","page","setPage","totalResults","setTotalResults","capitalizeFirstLetter","string","charAt","toUpperCase","slice","updateNews","url","country","category","apiKey","pageSize","data","fetch","parsedData","json","document","title","fetchMoreData","concat","margin","marginTop","map","element","description","urlToImage","author","publishedAt","source","name","defaultProps","propTypes","number"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\n\nimport NewsItem from './NewsItem'\nimport Spinner from './Spinner';\nimport PropTypes from 'prop-types'\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst News = (props)=>{\n    const [articles, setArticles] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [page, setPage] = useState(1)\n    const [totalResults, setTotalResults] = useState(0)\n    \n    const capitalizeFirstLetter = (string) => {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    } \n\n    const updateNews = async ()=> {\n        const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=${props.pageSize}`; \n        setLoading(true)\n        let data = await fetch(url);\n        let parsedData = await data.json()\n        setArticles(parsedData.articles)\n        setTotalResults(parsedData.totalResults)\n        setLoading(false)\n    }\n\n    useEffect(() => {\n        document.title = `${capitalizeFirstLetter(props.category)} - NewsMonkey`;\n        updateNews(); \n        // eslint-disable-next-line\n    }, [])\n\n\n    const fetchMoreData = async () => {   \n        const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page+1}&pageSize=${props.pageSize}`;\n        setPage(page+1) \n        let data = await fetch(url);\n        let parsedData = await data.json()\n        setArticles(articles.concat(parsedData.articles))\n        setTotalResults(parsedData.totalResults)\n      };\n \n        return (\n            <>\n                <h1 className=\"text-center\" style={{ margin: '35px 0px', marginTop: '90px' }}>NewsEngine - Top {capitalizeFirstLetter(props.category)} Headlines</h1>\n                {loading && <Spinner />}\n                {/* <InfiniteScroll\n                    dataLength={articles.length}\n                    next={fetchMoreData}\n                    hasMore={articles.length !== totalResults}\n                    loader={<Spinner/>} */}\n                {/* >  */}\n                    <div className=\"container\">\n                         \n                    <div className=\"row\">\n                        {articles.map((element) => {\n                            return <div className=\"col-md-4\" key={element.url}>\n                                <NewsItem title={element.title ? element.title : \"\"} description={element.description ? element.description : \"\"} imageUrl={element.urlToImage} newsUrl={element.url} author={element.author} date={element.publishedAt} source={element.source.name} />\n                            </div>\n                        })}\n                    </div>\n                    </div> \n                {/* </InfiniteScroll> */}\n            </>\n        )\n    \n}\n\n\nNews.defaultProps = {\n    country: 'in',\n    pageSize: 8,\n    category: 'general',\n}\n\nNews.propTypes = {\n    country: PropTypes.string,\n    pageSize: PropTypes.number,\n    category: PropTypes.string,\n}\n\nexport default News"]},"metadata":{},"sourceType":"module"}